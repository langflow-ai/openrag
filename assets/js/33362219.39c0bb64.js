"use strict";(self.webpackChunkopenrag_docs=self.webpackChunkopenrag_docs||[]).push([[532],{3782:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>i});var o=t(4848),s=t(8453),r=t(9179);const i=[];function a(e){const n={a:"a",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,o.jsxs)(n.p,{children:["All flows included with OpenRAG are designed to be modular, performant, and provider-agnostic.\nTo modify a flow, click ",(0,o.jsx)(r.A,{name:"Settings2","aria-hidden":"true"})," ",(0,o.jsx)(n.strong,{children:"Settings"}),", and click ",(0,o.jsx)(n.strong,{children:"Edit in Langflow"}),".\nOpenRAG's visual editor is based on the ",(0,o.jsx)(n.a,{href:"https://docs.langflow.org/concepts-overview",children:"Langflow visual editor"}),", so you can edit your flows to match your specific use case."]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(a,{...e})}):a(e)}},3982:(e,n,t)=>{t.d(n,{A:()=>o});const o=t.p+"assets/images/opensearch-agent-flow-a759d00657f2fdb62e64c84c643e8896.png"},8748:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>h,contentTitle:()=>l,default:()=>g,frontMatter:()=>c,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"core-components/agents","title":"Langflow in OpenRAG","description":"OpenRAG leverages Langflow\'s Agent component to power the OpenRAG OpenSearch Agent flow.","source":"@site/docs/core-components/agents.mdx","sourceDirName":"core-components","slug":"/agents","permalink":"/agents","draft":false,"unlisted":false,"editUrl":"https://github.com/openrag/openrag/tree/main/docs/docs/core-components/agents.mdx","tags":[],"version":"current","frontMatter":{"title":"Langflow in OpenRAG","slug":"/agents"},"sidebar":"tutorialSidebar","previous":{"title":"Terminal User Interface (TUI)","permalink":"/get-started/tui"},"next":{"title":"OpenSearch in OpenRAG","permalink":"/knowledge"}}');var s=t(4848),r=t(8453),i=t(9179),a=(t(1470),t(9365),t(3782));const c={title:"Langflow in OpenRAG",slug:"/agents"},l=void 0,h={},d=[{value:"Use the OpenRAG OpenSearch Agent flow",id:"flow",level:2},...a.RM,{value:"Additional Langflow functionality",id:"additional-langflow-functionality",level:2}];function p(e){const n={a:"a",code:"code",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components},{Details:o}=n;return o||function(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}("Details",!0),(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"OpenRAG leverages Langflow's Agent component to power the OpenRAG OpenSearch Agent flow."}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://docs.langflow.org/concepts-overview",children:"Flows"})," in Langflow are functional representations of application workflows, with multiple ",(0,s.jsx)(n.a,{href:"https://docs.langflow.org/concepts-components",children:"component"})," nodes connected as single steps in a workflow."]}),"\n",(0,s.jsxs)(n.p,{children:["In the OpenRAG OpenSearch Agent flow, components like the Langflow ",(0,s.jsxs)(n.a,{href:"https://docs.langflow.org/agents",children:[(0,s.jsx)(n.strong,{children:"Agent"})," component"]})," and ",(0,s.jsxs)(n.a,{href:"https://docs.langflow.org/bundles-elastic#opensearch",children:[(0,s.jsx)(n.strong,{children:"OpenSearch"})," component"]})," are connected to intelligently chat with your knowledge by embedding your query, comparing it the vector database embeddings, and generating a response with the LLM."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{alt:"OpenRAG Open Search Agent Flow",src:t(3982).A+"",width:"4086",height:"2240"})}),"\n",(0,s.jsx)(n.p,{children:"The Agent component shines here in its ability to make decisions on not only what query should be sent, but when a query is necessary to solve the problem at hand."}),"\n",(0,s.jsxs)(o,{closed:!0,children:[(0,s.jsx)("summary",{children:"How do agents work?"}),(0,s.jsx)(n.p,{children:"Agents extend Large Language Models (LLMs) by integrating tools, which are functions that provide additional context and enable autonomous task execution. These integrations make agents more specialized and powerful than standalone LLMs."}),(0,s.jsx)(n.p,{children:"Whereas an LLM might generate acceptable, inert responses to general queries and tasks, an agent can leverage the integrated context and tools to provide more relevant responses and even take action. For example, you might create an agent that can access your company's documentation, repositories, and other resources to help your team with tasks that require knowledge of your specific products, customers, and code."}),(0,s.jsx)(n.p,{children:"Agents use LLMs as a reasoning engine to process input, determine which actions to take to address the query, and then generate a response. The response could be a typical text-based LLM response, or it could involve an action, like editing a file, running a script, or calling an external API."}),(0,s.jsx)(n.p,{children:"In an agentic context, tools are functions that the agent can run to perform tasks or access external resources. A function is wrapped as a Tool object with a common interface that the agent understands. Agents become aware of tools through tool registration, which is when the agent is provided a list of available tools typically at agent initialization. The Tool object's description tells the agent what the tool can do so that it can decide whether the tool is appropriate for a given request."})]}),"\n",(0,s.jsx)(n.h2,{id:"flow",children:"Use the OpenRAG OpenSearch Agent flow"}),"\n",(0,s.jsxs)(n.p,{children:["If you've chatted with your knowledge in OpenRAG, you've already experienced the OpenRAG OpenSearch Agent chat flow.\nTo switch OpenRAG over to the ",(0,s.jsx)(n.a,{href:"https://docs.langflow.org/concepts-overview",children:"Langflow visual editor"})," and view the OpenRAG OpenSearch Agentflow, click ",(0,s.jsx)(i.A,{name:"Settings2","aria-hidden":"true"})," ",(0,s.jsx)(n.strong,{children:"Settings"}),", and then click ",(0,s.jsx)(n.strong,{children:"Edit in Langflow"}),".\nThis flow contains eight components connected together to chat with your data:"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsxs)(n.a,{href:"https://docs.langflow.org/agents",children:[(0,s.jsx)(n.strong,{children:"Agent"})," component"]})," orchestrates the entire flow by deciding when to search the knowledge base, how to formulate search queries, and how to combine retrieved information with the user's question to generate a comprehensive response.\nThe ",(0,s.jsx)(n.strong,{children:"Agent"})," behaves according to the prompt in the ",(0,s.jsx)(n.strong,{children:"Agent Instructions"})," field."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsxs)(n.a,{href:"https://docs.langflow.org/components-io",children:[(0,s.jsx)(n.strong,{children:"Chat Input"})," component"]})," is connected to the Agent component's Input port. This allows to flow to be triggered by an incoming prompt from a user or application."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsxs)(n.a,{href:"https://docs.langflow.org/bundles-elastic#opensearch",children:[(0,s.jsx)(n.strong,{children:"OpenSearch"})," component"]})," is connected to the Agent component's Tools port. The agent may not use this database for every request; the agent only uses this connection if it decides the knowledge can help respond to the prompt."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsxs)(n.a,{href:"https://docs.langflow.org/components-models",children:[(0,s.jsx)(n.strong,{children:"Language Model"})," component"]})," is connected to the Agent component's Language Model port. The agent uses the connected LLM to reason through the request sent through Chat Input."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsxs)(n.a,{href:"https://docs.langflow.org/components-embedding-models",children:[(0,s.jsx)(n.strong,{children:"Embedding Model"})," component"]})," is connected to the OpenSearch component's Embedding port. This component converts text queries into vector representations that are compared with document embeddings stored in OpenSearch for semantic similarity matching. This gives your Agent's queries context."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsxs)(n.a,{href:"https://docs.langflow.org/components-io",children:[(0,s.jsx)(n.strong,{children:"Text Input"})," component"]})," is populated with the global variable ",(0,s.jsx)(n.code,{children:"OPENRAG-QUERY-FILTER"}),".\nThis filter is the ",(0,s.jsx)(n.a,{href:"/knowledge#create-knowledge-filters",children:"Knowledge filter"}),", and filters which knowledge sources to search through."]}),"\n",(0,s.jsxs)(n.li,{children:["The ",(0,s.jsx)(n.strong,{children:"Agent"})," component's Output port is connected to the ",(0,s.jsxs)(n.a,{href:"https://docs.langflow.org/components-io",children:[(0,s.jsx)(n.strong,{children:"Chat Output"})," component"]}),", which returns the final response to the user or application."]}),"\n",(0,s.jsxs)(n.li,{children:["An ",(0,s.jsxs)(n.a,{href:"https://docs.langflow.org/mcp-client",children:[(0,s.jsx)(n.strong,{children:"MCP Tools"})," component"]})," is connected to the Agent's ",(0,s.jsx)(n.strong,{children:"Tools"})," port. This component calls the ",(0,s.jsx)(n.a,{href:"/ingestion#url-flow",children:"OpenSearch URL Ingestion flow"}),", which Langflow uses as an MCP server to fetch content from URLs and store in OpenSearch."]}),"\n"]}),"\n",(0,s.jsx)(a.Ay,{}),"\n",(0,s.jsxs)(n.p,{children:["For an example of changing out the agent's language model in OpenRAG, see the ",(0,s.jsx)(n.a,{href:"/quickstart#change-components",children:"Quickstart"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["To restore the flow to its initial state, in OpenRAG, click ",(0,s.jsx)(i.A,{name:"Settings","aria-hidden":"true"})," ",(0,s.jsx)(n.strong,{children:"Settings"}),", and then click ",(0,s.jsx)(n.strong,{children:"Restore Flow"}),".\nOpenRAG warns you that this discards all custom settings. Click ",(0,s.jsx)(n.strong,{children:"Restore"})," to restore the flow."]}),"\n",(0,s.jsx)(n.h2,{id:"additional-langflow-functionality",children:"Additional Langflow functionality"}),"\n",(0,s.jsx)(n.p,{children:"Langflow includes features beyond Agents to help you integrate OpenRAG into your application, and all Langflow features are included in OpenRAG."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Langflow can serve your flows as an ",(0,s.jsx)(n.a,{href:"https://docs.langflow.org/mcp-server",children:"MCP server"}),", or consume other MCP servers as an ",(0,s.jsx)(n.a,{href:"https://docs.langflow.org/mcp-client",children:"MCP client"}),". Get started with the ",(0,s.jsx)(n.a,{href:"https://docs.langflow.org/mcp-tutorial",children:"MCP tutorial"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["If you don't see the component you need, extend Langflow's functionality by creating ",(0,s.jsx)(n.a,{href:"https://docs.langflow.org/components-custom-components",children:"custom Python components"}),"."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Langflow offers component ",(0,s.jsx)(n.a,{href:"https://docs.langflow.org/components-bundle-components",children:"bundles"})," to integrate with many popular vector stores, AI/ML providers, and search APIs."]}),"\n"]}),"\n"]})]})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},9179:(e,n,t)=>{t.d(n,{A:()=>r});t(6540);var o=t(4827),s=t(4848);function r({name:e,...n}){const t=o[e];return t?(0,s.jsx)(t,{...n}):null}}}]);